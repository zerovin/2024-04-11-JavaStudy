/*
 *	프로그램 - 묶음(관련된 내용을 묶어서 재사용)
 *	  데이터관리 - 한개씩 저장 후 관리 - 변수/상수
 *	          - 여러개 동시에 저장 후 관리 - 배열 : 같은 데이터형을 묶어서 관리
 *	                                  클래스 : 다른 데이터형을 묶어서 관리
 *	          -----------------메모리에 저장(RAM) => 프로그램 종료시 사라짐
 *	          - 영구적인 저장 장치 - 파일 : 보안에 취약
 *	                            오라클(RDBMS)
 *	          => 자바 + 오라클(저장) => 자바가 데이터를 읽어서 브라우저에 뿌림
 *	             브라우저 HTML/CSS/JavaScript 오라클연결X, 자바는 일반 텍스트로 인식
 *	             =>자바가 HTML 오라클 사이에서 서로 연결 HTML-자바-오라클
 *	             ASP => 오라클 => C#
 *	             Django => 오라클 => 파이썬
 *	          ------------
 *	          - 저장기간에 따라 - 지역변수 : 메소드 종료와 동시에 사라짐 ex)리턴형/매개변수
 *	                          전역변수 : 프로그램 종료시까지 사용
 *	                                   믈래스 안의 모든 메소드가 메모리 공유
 *	  명령문관리 - 연산자, 제어문 => 묶어서 관리(메소드)
 *	          - 메소드 - 리턴형 : 결과값 도출
 *	                   매개변수 : 어떤 값을 받을지
 *	                   호출 위치 : 어떤 지점에서 호출할지 
 *	                   라이브러리 사용
 *	  출력관리 - 애플리케이션 : 도스창, 윈도우창에 출력
 *	           웹 애플리케이션 : 브라우저 출력
 *	           모바일 애플리케이션 : 휴대폰 출력
 *
 *	자바 => 클래스로 시작, 클래스로 끝
 *	  구성요소
 *	    class ClassName{
 *	       ----------------
 *	        변수 설정 - 전역변수 : 자동으로 초기화
 *	                            ex) static int a; => 0값
 *	                          클래스 모든 영역에서 사용가능
 *	                          다른 클래스에서도 사용가능
 *	       ----------------
 *	        생성자 
 *	       ----------------
 *	        static void display1(){
 *	            변수 - display1()안에서만 사용 가능
 *	        }
 *	        static void display2(){
 *	            변수 - display2()안에서만 사용 가능
 *	        }
 *	       ----------------
 *	        값을 계속 유지하는 변수 => 전역변수==멤버변수
 *	        사용 후 버리는 변수 => 지역변수
 *	    }
 *
 *	 클래스 구성 제작 - 객체지향프로그램의 3대 특성
 *	   1. 데이터 보호 - 캡슐화	
 *	   2. 재사용 - 상속
 *	   3. 수정, 추가 - 다형성(오버라이딩, 오버로딩)
 *	 클래스의 종류
 *	   일반클래스 / 추상클래스 / 인터페이스 / 내부 클랫 / 익명의 클래스 / 지역클래스 / 멤버클래스
 *	 예외처리 - 프로그램이 종료하지 않게 (비정상종료) X
 *	 라이브러리
 */

/*
 *	1. package => 한번만 사용 가능
 *	   import java.util.*;
 *	          ----------패키지
 *	   import 여러개도 가능
 *	2. class ClassName{ //클래스는 한개에 대한 정보만 가지고 있다 ex) 하나의 폼을 만들어 10000개 할당, 출력
 *	      변수 목록 - 지역변수, 전역변수(멤버변수-new(새로운 메모리에 따로 저장), 공유변수-static(자동 메모리 할당))
 *	      생성자	
 *	      메소드{
 *	         변수목록
 *	         처리
 *	      }
 *	      main(){
 *
 *	      }
 *	   } 
 */
public class 메소드_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
