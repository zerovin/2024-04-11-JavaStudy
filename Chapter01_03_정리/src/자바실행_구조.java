/*
 *	1.자바언어 = 클래스로 시작, 클래스로 종료 
 *	2.public static void main(String[] args) = main method = 프로그램의 시작점
 *	  main이 없는 경우 프로그램 실행X
 *	  =>실행시에 main을 찾는다
 *	3.구조
 *	  public class className{
 *	  	public static void main(String[] args){
 *				//소스코딩 => 문법 => 예외처리 (교재 8장)
 *			}
 *	  }
 *		
 *	4.기본적인 자바 용어
 *	  1)자바 => .java : 원시소스(프로그래머만 알 수 있는 소스)
 *			   └ 얘를 컴퓨터가 알 수 있게 변경(번역) => 0, 1
 *				 컴퓨터가 알 수 있는 언어 => .class(바이트 코드)
 *				--------------------------------------- 컴파일 (0, 1로 변경 => 기계어 변환)
 *		자바 실행
 *		코드 작성
 *					기계어변경(컴파일)				자바실행환경(JKD=>JVM)
 *		A.java ----------------------- A.class ---------------------- 번역된 소스를 한줄씩 읽어서 출력
 *						javac							java
 *			|							|										|
 *		프로그래머만 알 수 있는 언어	컴퓨터가 알 수 있는 언어 => 배포						인터프리터
 *								AWS => 전체파일을 모아서 .war
 *
 *		컴파일 방식 - 기계어로 변경 => 자바/C/C++/C#
 *		인터프리터 방식 - 기계어 변경없이 한줄씩 읽음 => HTML/CSS/자바
 *
 *		**자바 ==> SW => 고급언어
 *		**C/C++ ==> HW => 저급언어
 *		B ---> C ---> C++ (C With Class) ---> Java(C/C++ 기반)
 *							|						|
 *						재사용(객체지향언어)		C/C++의 어려운 부분을 제외
 *											구조체/포인터 => 주소개념X
 *		**C/C++
 *					컴파일			구동
 *		  .c/.cpp --------> .obj ---------> .exe
 *	자바언어 => .exe를 만들지 못함(단점) => 브라우저, 핸드폰 ==> *웹, 앱 ==> 안드로이드(SDK-자바, NDK-C)
 *	웹프로그래머 언어 - JSP => Java => 80% 공기업/금융권/대기업
 *				 - ASP => C# => 15% 학교
 *				 - PHP => Script => 5% 일반사이트
 *	5.자바언어의 특징
 *	  1)객체 지향 프로그램 - 유지보수(수정, 추가, 재사용, 데이터 보호)
 *							  --------- ----  --------
 *							다형성(***오버라이딩-modify, 오버로딩-new)
 *										상속=>확장 extends JFrame
 *												캡슐화(은닉화)
 *	  2)자바 가상머신(JVM) - 모든 운영체제에서 호환 가능
 *		- MS (Window에서만 실행) => Window < Linux(중국애들이 리눅스 씀)
 *		- 차세대 운영체제(우분투-리눅스기반)
 *		-
 *		사용자
 *		  |
 *		JVM => 운영체제 연결 - API => Write ONE:한번의 소스코딩으로 모든 운영체제에서 운영가능)
 *		  | => 메모리구조(변수...)
 *		운영체제
 *		  |
 *		하드웨어
 *
 *		**메모리 구조
 *		------------------------------
 *		  Method 영억 / static 변수
 *		------------------------------
 *		  Stack - 메모리 자체 관리
 *				  지역변수/ 매개변수
 *				  └ {}를 벗어나면 사라지는 변수 === ***
 *					단점 - 반드시 초기화를 한 다음에 사용
 *		------------------------------
 *		  프로그래머가 관리하는 영역
 *		  Heap - 멤버변수, 클래스, 배역
 *		------------------------------
 *	  3)멀티쓰레드 이용 (main => 쓰레드)
 *		- 한개의 실행파일에서 여러개의 기능을 동시에 수행
 *		  => 게임(아바타, 비행기)
 *	  4)용어
 *		1.주석:프로그램과 상관없이 코드에 설명을 붙여준다
 *		  여러줄 / 한줄 //
 *		2.변수:메모리에 저장 => 한개의 데이터만 저장 가능
 *		3.메소드:사용자가 요청시에 처리하는 기능(기능분리, 다른클래스연결)
 *		4.예약어:이미에서 자바에서 사용하는 단어(int,double...)
 *		5.초기화:데이터를 저장할 때 처음으로 부여하는 값
 *		6.상수:고정된 값 - 변경불가 final
 *================================================================== 1장
 *
 *	1.프로그램
 *	  데이터를 저장 => 데이터 처리 => 처리 결과 출력
 *	  ---------	   --------	   -----------
 *					사용자 요청시 처리(연산자/제어문) => 웹, 도스창, 윈도우창, 핸드폰
 *	  1)데이터 한개저장(변경O) => 변수
 *	  2)데이터 한개저장(변경X) => 상수
 *	  3)데이터 여러개저장 => 배열, 클래스
 *	  ---------------------------- 단점 = 프로그램 종료시 자동삭제 => 메모리
 *	  4)영구적인 저장장치 = File / RDBMS(오라클)
 *	2.변수/상수
 *	  변수 : 한개의 데이터를 저장하는 메모리 공간의 별칭 => 변경해서 사용
 *			데이터형 변수명;
 *	  상수 : 한개의 데이터를 저장하는 메모리 공간의 별칭 => 고정해서 사용
 *			final 데이터형 변수명=값;
 *	  - 변수명칭법(메소드, 클래스, 인터페이스, 배열 동일)
 *		1)알파벳이나 한글로 시작 (대소문자 구분)
 *		2)숫자 사용 가능 (맨 앞은 불가)
 *		3)공백 불가
 *		4)예약어(키워드) 사용 불가
 *		5)특수문자 사용가능 _, $만 (위치 상관없음)
 *	  - 데이터형/자료형/기본형 => 메모리 공간의 크기
 *		정수
 *		  byte - 1byte(8bit) => 0, 1이 8개만 사용가능
 *			   - 0 1 1 1 1 1 1 1 => 10진법 => 127
 *				 저장할 수 있는 값 => -128~127까지만 사용가능
 *									그 이상 초과하면 오버플로우 => 오류 					
 *		  int - 4byte(32bit) => 0, 1이 32개만 사용가능
 *			  - 저장할 수 있는 값 => -21억4천~21억4천
 *			  - 컴퓨터가 인식하는 숫자의 기본 => default(모든 숫자는 int)
 *				10(int)
 *		  long - 8byte(64bit) => 0, 1이 64개만 사용가능
 *			   - 수 표현이 많다(금융권, 공기업, 빅데이터)
 *		실수
 *		  double - 8byte
 *				 - 저장할 수 있는 값 => 소수점 15자리
 *				 - 컴퓨터가 사용하는 모든 실수 => 실수형의 default
 *				   float f=10.5; => 오류 (10.5를 double로 인식하기 때문 => 10.5F)
 *		문자
 *		  char - 2byte
 *			   - 저장할 수 있는 값 => 0~65535
 *			   - 각국의 언어 사용 가능 => UniCode, 영문, 숫자 => ASC 
 *		논리
 *		  boolean - 1byte
 *				  - true/false만 저장가능
 *	  -초기화
 *		byte b=100; => 127을 초과하지 않으면 가능
 *		int i=100; => 21억4천 초과하지 않으면 가능
 *		long 1=100L => L=long형의 값
 *		char c='A' => 문자하나 저장 가능 => ''오류 => ' '공백 오류X
 *		double d=10.5D => D는 생략가능
 *		boolean b=true/false
 *		=> 메모리에 저장한 후에 필요시에는 변경해서 사용 가능
 *		=> 변수가 없는 경우에는 데이터값을 처리할 수 없다
 *		=> 프로그램은 변수가 없는 프로그램이 존재하지 않는다 = 한개이상의 변수는 존재
 *			한개의 프로그램안에서 임시로 저장 후 사용
 */	

//정수값을 받아 저장 후 출력
/*
 *	초기화
 *	1)명시적 초기화 int a=10;
 *	2)난수 발생(임의추출) int a=(int)(Math.random()*100)+1;
 *	3)사용자로부터 값을 받아 초기화 int i=scan.nextInt();** 가장 많은 경우 
 * 
 */
import java.util.Scanner;
public class 자바실행_구조 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan=new Scanner(System.in);
		System.out.print("정수 입력:");
		int num=scan.nextInt(); //정수니까 int로 받
		System.out.println("입력받아서 초기화된 정수값:"+num);
		
		System.out.print("실수 입력:");
		double d=scan.nextDouble(); //실수니까 double로 받
		System.out.println("입력받은 실수값:"+d);
		
		System.out.print("논리 입력:");
		boolean b=scan.nextBoolean(); //논리니까 boolean
		System.out.println("입력받은 논리값:"+b);
		
		System.out.print("문자 입력:");
		char c=scan.next().charAt(0); //문자 char
		System.out.println("입력받은 문자:"+c);
	}

}
