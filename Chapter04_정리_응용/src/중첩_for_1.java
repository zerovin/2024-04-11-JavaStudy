/*
 *	중첩 for - 반복문 웹에서는 사용빈도 거의 없 
 *	1)코딩테스트/정보처리
 *	2)솔루션
 *
 *	중첩
 *	   조건문
 *	       if(){ => 1차
 *	           if(){ => 2ck
 *
 *	           }
 *	       }
 *
 *	   선택문
 *	       switch(){
 *	           case :
 *	               switch(){
 *
 *	               }
 *	       }
 * 	    
 * 	   반복문 - 주로 => for
 * 	       for(){ -----------> 줄 수(세로)
 * 	           for(){ -------> 출력 개수(가로)
 * 
 *	           }
 *	       }
 *	   => ex) 1번째 줄 5
 *	          2번째줄 4 ...
 *
 *	   형식)
 *	             1    2    7
 *	       for(초기값;조건식;증감식){
 *	               3    4     6
 *	          for(초기값;조건식;증감식){
 *	              문장수행 5
 *	          }
 *	       }
 *	       => 1-2-3- 4-5-6- 4-5-6- 4-5-6 -4(false면) -7-2-3- 4-5-6- 4-5-6- 4-7...
 *
 *	   ex)
 *	      for(int i=1;i<=3;i++){
 *	         for(int j=1;j<=3;j++){
 *
 *	         }
 *	      }
 *	      i=1 => j=1 j=2 j=3 => i증가
 *	      i=2 => j=1 j=2 j=3 => i증가
 *	      i=3 => j=1 j=2 j=3 => i증가
 *	      i=4 => 종료
 *	
 *	   1. 줄수 - 첫번째 for
 *	   2. 출력개수 - 두번째 for
 *
 *	   ex)
 *	      *****
 *	      *****
 *	      *****
 *	      *****
 *	      1.줄수:4(1-4)
 *	      2.출력물:* 5개(1-5)
 *	      
 *	      2*1=2 ..... 9*1=9
 *	      ...         ...
 *	      ...         ...
 *	      2*9=18      9*9=81
 *	      1.일차 for => 9줄을 만든다 (1-9)
 *	      2.이차 for => 8개를 출력 (2-8)
 *	
 */
public class 중첩_for_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		for(int i=1;i<=5;i++) { //줄수 ==> for횟수는 5*5=25
			// 2차 for문 종료 후 => i++
			for(int j=1;j<=5;j++) {
				System.out.println("i="+i+",j="+j); //실제 출력물은 2차 for문 안에
			}
			System.out.println();
		}
		/*
		 *  i=1,j=1
			i=1,j=2
			i=1,j=3
			i=1,j=4
			i=1,j=5
			
			i=2,j=1
			i=2,j=2
			i=2,j=3
			i=2,j=4
			i=2,j=5
			
			i=3,j=1
			i=3,j=2
			i=3,j=3
			i=3,j=4
			i=3,j=5
		 *
		 */
	}

}
