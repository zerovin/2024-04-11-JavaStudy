/*
 *	1. 다음 중 배열 선언이 잘못된 것은?
 * 
 *	1) int[] n = {1, 2, 3, 4, 5};
	2) int n[] = {0};
	3) int[] n = new int[3];
	4) int n[3] = new int[3]; ===========> X
	
	배열 => 변수 여러개를 모아서 한개의 이름(변수-인덱스번호로 구분)으로 제어
	       고정적 - 데이터 추가, 삭제 불가능
	       	  선언한 수만큼만 사용 가능
	       	  => 수를 늘릴 경우 => 새로운 배열을 생성(크게)
	       	  데이터 복사 후 사용 arraycopy(), for
	       인덱스를 이용하기 때문에 제어문 사용이 편리
	          인덱스는 0부터 순차적
	       선언
	          데이터형[] 배열명; => 권장
	          데이터형 배열명[];
	          ------맞는 데이터만 첨부 => 같은 데이터형 모음, 사용용도가 같아야 함
	                ex) 이미지, 제목, 조회수... => 인덱스번호만 참조
	       초기화
	          배열명=new 데이터형[]{} => 선언 후 초기화
	          데이터형[] 배열명={값,값...} => 선언과 동시에 초기화
	          데이터형[] 배열명=new 데이터형[개수] => 임의로 초기화(자동초기화)
	       배열의 갯수확인
	          배열명.length
	       배열한개씩 사용
	          배열명[인덱스] => 읽어오기, 일변 변수와 동일시
	          배열명[인덱스]=값 => 값 입력, 변경
	          
 * 
 */
public class 문제_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] n1= {1,2,3,4,5};
		System.out.println(n1.length); //5
		
		int n2[]={0}; // C/C++ => 가급적 사용X
		System.out.println(n2.length); //1  하나일경우 일반변수 사용 int n2=0;
		
		int[] n3=new int[3];
		System.out.println(n3.length); //3
		
		//int n4[3]=new int[3]; 오류
		//      ---배열로 데이터를 저장해겠다는 뜻의 []
		int n4[]=new int[3];
		
	}

}
