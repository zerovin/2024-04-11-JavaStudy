package com.sist.main;
/*
 *  예외처리
 *  - 정의 : 사전에 에러를 방지하는 프로그램 => 견고성
 *  - 목적 : 비정상 종료를 방지하고 정상상태를 유지한다
 *  
 *  종류
 *  - 직접처리 => 예외 발생시 복구 => 복구하는 위치==catch 블록
 *              try ~ catch ~ finally
 *  - 간접처리 => 예외 발생시 회피 => 예외처리 없이 피해간다
 *              throws
 *  - 임의발생 => 에러가 없는데 임의로 발생 => 테스트용
 *              throw
 *  - 사용자정의 => 자바에서 지원하지 않는 예외처리를 직접 만들어서 처리
 *               Exception을 상속받아서 처리 => 사용빈도 거의 없음
 *               
 *  1.try~catch
 *    try{
 *       정상수행하는 문장
 *       프로그램 수행 중 오류 발생할 수도 있음 => 프로그래머 실수, 사용자 입력오류(우선 조건문, 안될시 예외처리)
 *    }catch(예외처리클래스){ => catch는 여러개 사용가능 => 예상되는 에러 따로설정/한개로 처리(상속도)
 *       try 수행중 에러 발생시 처리하는 영역
 *    }finally{
 *       정상(try), 에러(catch)와 관련없이 무조건 수행하는 문장이 있는 경우 => 주로 닫기기능 => 필요시만 사용, 생략가능
 *    }
 */
public class 예외처리_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
