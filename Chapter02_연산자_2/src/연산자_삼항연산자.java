/*
 *	연산자
 *	  단항연산자
 *		-증감연산자 (++, --)
 *		 전치/후치 - 무조건 1씩 증감
 *		 ex) int a=10;
 *			 a++; ======> a에 1을 증가
 *			 ++a; ======> a에 1을 증가
 *		 단, 연산자가 2개이상이 있는 경우
 *		 => a++ - 다른 연산을 수행하고 나중에 증가
 *			++a - 먼저 증가한 후에 다른 연산 수행
 *			ex) int a=10;
 *				int b=a++;
 *				=> b=a => a+1
 *				   b=10 , a=11
 *				int a=1-;
 *				int b=++a;
 *				=> a+1 => b=a
 *				   a=11 , b=11
 *			=> a++ 대입->증가
 *			   ++a 증가->대입
 *		 ++, -- => 변수값 자체가 변경
 *		 ex) a++(++a) = a=a+1 증가 값을 메모리 자체값으로 변경
 *			 a--(--a) = a=a-1 감소 값을 메모리 자체값으로 변경
 *		 => 반복문에서 주로 사용 ex)게임(슈팅게임)
 *		 => 웹(데이터베이스 연동)***
 *
 *		-부정연산자 (!)
 *		 boolean으로만 사용 가능
 *		 true->false, false->true
 *		 => 조건문, 반복문 (제어문에서 주로 사용)
 *		 ex) boolean bCheck=false;
 *			 !bCheck => true
 *			 !(6==7) => true
 *			 => 예약일, !예약조건
 *
 *		-형변환연산자 ((데이터형))
 *		 형변환 대상 - byte / char / int / long / float / double
 *		 (int)문자->정수
 *		 (double)정수->실수
 *		 (int)실수->정수
 *		 (char)정수->문자
 *		 1)묵시적 형변환 = 자동 형변환
 *		   작은 데이터형을 큰 데이터형으로 변경 (연산처리, 값 대입)
 *		   ex) int i='A';
 *			   'A'=65 => i=65 => 'A'(char) -> 자동으로 int변경
 *			   double d=10;
 *			   int 10 -> d 10.0 => 자동으로 double변경
 *			   10+10.5 => 10.0+10.5 => 연산처리는 같은 데이터형끼리만 가능
 *		 2)명시적 형변환 = 강제 형변환
 *		   큰데이터형을 작은 데이터형으로 변경
 *		   ex) int a=(int)10.5; = 10
 *			   a=10 => 실수를 정수로 변경
 *		   ***데이터형 크기 확인
 *			  <------------- 강제형변환 (명시적) ------------
 *			  byte < char < int < long < floate < double
 *			  ------------- 자동형변환 (묵시적) ------------>
 *		   ***연산시 주의점
 *			  1.데이터형
 *			  2.프로그램에 필요한 데이터형이 무엇인지 확인
 *
 *	  이항연산자 - 연산대상=피연산자 2개
 *		-산술연산자 (+, -, *, /, %) => 가장 많이 사용되는 연산자
 *		  + : 일반산술(덧셈)
 *			  ex) 10+10=20 => 합, 계산기
 *			  문자열 결합
 *			  ex) "Hello "+"Java"="Hello Java" => 데이터저장, 크롤링
 *		  / : 0으로 나눌 수 없다 => 조건, 예외처리
 *			  정수/정수=정수,소수점X (파이썬,자바스크립트,오라클 => 정수/정수=실수)
 *		  % : 나눈 나머지, 배수구하기, 조건
 *			  부호 - 왼쪽부호가 남는다
 *			  	    + % + => +
 *					- % - => -
 *					- % + => -
 *					+ % - => +
 *			  ex) 짝수 => a%2==0
 *				  홀수 => a%2!=0, a%2==1
 *				  3의 배수 => a%3==0
 *				  7의 배수 => a%7==0
 *		 *** *, /, %가 +, -보다 우선순위가 높다
 *		 *** 우선순위 변경은 ()이용
 *			 ex) 3+5*10 = 3+50
 *				 (3+5)*10 = 15*10
 *
 *		-비교연산자 (==, !=, <, >, <=, >=)
 *		 == : 같다 (JavaScript ===, 오라클 =)
 *		 != : 같지 않다
 *		 < : 작다
 *		 < : 크다
 *		 <= : 작거나 같다 =>  < || ==
 *		 >= : 크거나 같다 =>  > || ==
 *		 ***문자/숫자(정수,실수)만 가능, 문자열은 비교 불가 문자열비교=equals(), !equals(), compare()
 *								  String => 클래스형(주소) => 메소드로 접근
 *		-논리연산자 (&&, ||)
 *		 && - (조건)&&(조건) 조건 2개가 모두 true일 경우 true => 나머지는 false
 *			  범위 포함, 대문자/소문자
 *		 || - (조건)||(조건) 조건 1개 이상이 true일 경우 true => false/false면 false
 *		 ***효율적인 연산(최적화 연산)
 *			&& - 앞에 있는 조건이 false => 뒤에 있는 연산은 하지 않는다
 *			  	 => 앞의 조건은 false일 확률이 높은 것으로 작성
 *			|| - 앞에 있는 조건이 true => 뒤에 있는 연산은 하지 않는다
 *				 => 앞의 조건은 true일 확률이 높은 것으로 작성
 *		 자바는 무조건 true/false
 *		 	true : 0, 0.0이 아닌 수
 *			false : 0, 0.0
 *		 C/C++/Python/JavaScript => 숫자
 *
 *		-대입연산자 (=, +=, -=)
 *		 대입연산자
 *		 ex) int a=10;
 *			 a=10+10 => 계산된 결과를 a에 대입
 *		 복합대입연산자(연산자가 두개)
 *		 += 여러개 증가, 누적시에 주로 사용
 *		 -= 여러개 감소
 *		  ++, --는 1개씩 증감
 *		 ex) int a=10;
 *			 a+=10 == a=a+10 => a=10+10 => a=20
 *			 int a=10;
 *			 a-=10 == a=a-10 => a=10-10 => a=0
 *
 *	  삼항연산자 if~else => 소스가 길 경우 사용(HTML)
 *		-(조건)?값1:값2
 *		  └ 조건의 결과값 - true => 값1
 *					  - false => 값2
 *		  ex) int a=10;
 *			  a%2==0?"짝수":"홀수"
 *			  => true => "짝수"
 * 
 *	프로그램
 *	  1)기본 문법
 *		- 변수/데이터형/연산자/제어문
 *	  2)묶는 연습
 *		- 데이터 묶음(배열/클래스)
 *		- 명령문 묶음(메소드)
 *		----------------------+(클래스)
 *		=> 데이터형/액션(기능처리)
 *		-----------------------(패키지)
 *	  3)재사용 중심
 *	  4)퍼포먼트 중심(속도) => 최적화
 * 
 */
public class 연산자_삼항연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 자동형변환
		char c=65; //c='A'
		int a=10;
		int b=55;
		//char c1=a+b; // 오류
		char c1=(char)(a+b);
		
		int num=(int)(Math.random()*100)+1; // 1~100사이 숫자 임의 추출
		//           -------------------
		//            0.0~0.99 => *100 => 0.0~99.0
		//      -----
		//       0~99
		//                             ----
		//                             1~100
		System.out.println("num="+num);
		System.out.println(num%2==0?"짝수":"홀수");
	}

}
