/*
 *	1. 변수 선언
 *		1) 변수 - 한개의 데이터를 저장하는 메모리 공간 이름,주소 => 저장한 데이터 읽기쓰기 가능하도록
 *			└ 데이터 변경이 가능
 *			└ 데이터형 변수명=값;
 *		2) 상수 - 한개의 데이터를 저장하는 메모리 공간 이름,주소
 *			└ 데이터 변경이 불가, 값 고정
 *			└ 변수와 상수의 구분은 final
 *			└ final 데이터형 상수명=값;
 *		3) 리터럴 - 실제 저장된 값(메모리)
 *
 *	2. 변수 명칭법 = 식별자, 구분자 - 같은 곳에서 같은 이름의 변수 선언 불가
 *		1) 알파벳, 한글로 시작, 대소문자 구분
 *			ex) int 국어,영어,수학; int kor,eng,math,Kor
 *		2) 숫자사용, 맨 앞자리는 불가
 *			ex) int kor1,kor2,kor3...
 *		3) 키워드, 예약어 사용 불가
 *			ex) int, byte, long, boolean, char... 사용불가
 *		4) 공백 불가
 *			ex) int a b; 불가
 *		5) 특수문자 $, _ 가능, 위치 상관X
 *			언더바 _ 가 앞에 있을시 임시변수 - 한번쓰고 버림(정렬)
 *			ex)_temp
 *	  *클래스,변수,상수,메소드,인터페이스,추상클래스,배열 - 명칭법 동일
 *
 *	3. 데이터형(타입), 기본형 (27page)
 *	   -정수,실수,문자,논리
 *		------------------------------------------------
 *		정수형
 *		  byte - 1byte, 사용범위 : -128~127
 *				 파일읽기,업로드,다운로드,네트워크통신
 *		  int - 4byte, 사용범위 : -21억4천~21억4천
 *				가장 많이 사용하는 정수형 (디폴트)
 *				모든 프로그램의 정수형이 필요한 경우 사용
 *		  long - 8byte, 사용범위 : 2^63
 *				 데이터수집 - 라이브러리가 제작
 *				 금융권/증권
 *		 -bit , byte = 0 or 1만 저정하는 공간 8bit=1byte
 *		  1byte = -------------------------
 *				  |	 |	|  |  |  |	|  |  |  							
 *				  -------------------------
 *				  1=음수, 0=양수
 *				  11111111 = -128
 *				  01111111 = 127	
 *
 *				  01111111을 음수로
 *				  1) Change 0->1 1->0
 *					 10000000 -> 1의 보수
 *					+ 		1
 *					---------
 *					100000001 -> 2의 보수 
 *		------------------------------------------------
 *		논리형 - boolean = true/false
 *			   조건이 있는 경우에 주로 사용
 *			   로그인, 검색, 페이지
 *		  	   boolean - 변수 설정
 *						   bLogin, bCheck...
 *						   ex) boolean bCheck=false
 *			   			   1byte (0=false, 1=true)
 *		------------------------------------------------
 *		문자형 - char => 2byte (0~65535)
 *			 - 문자는 양수로만 구성
 *			 - Unicode -  각국의 언어 사용 가능
 *			 - char는 문자 한개만 저장 가능 ''
 *			 - 여러개 저장은 "" => 문자열 => char(X), char배열 = String
 *			 - char는 저장시 해당 변호로 변경해서 저장
 *				*'A'=65 / 'a'=97 / '0'=48 => ASC코드값
 *			 - 사용법 char fname='홍';
 *					char alpha='A';
 *			 - char는 연산시에 정수형으로 변경
 *				'A'+1=66
 *				"A"+1="A1"
 *			 	7+"7"+7+7=7777 => 문자열 결합
 *				7+7+"7"+7=1477
 *		  ***정수표현법***
 *			10, 20 ===> 10진법
 *			010 ===> 8진법
 *			0x11 ===> 16진법
 *			0b1000 ===> 2진법
 *		------------------------------------------------
 *		실수형 : 소수점 - 평균치 구할때 주로 사용
 *			   float = 4byte => 소수점 6자리 '숫자F','숫자f'
 *			   double = 8byte => 소수점 15자리 (실수형의 default) '숫자D','숫자d' Dd 생략가능
 *						소수점은 일단 double
 *		------------------------------------------------
 *		참조형 : 데이터를 여러개 한번에 저장하는 방법 ex)배열, 클래스
 *		------------------------------------------------ 
 *
 *	4. 각 데이터형별 사용법
 *
 *	5. 연산처리 => 제어
 * 
 * 
 * 
 */
public class 변수_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 모든 숫자 => int로 인식
		// 음수표현 127에 대한 음수표현 = ~127 
		System.out.println(~127); //-128
		System.out.println('A'+1); //66
		System.out.println("A"+1); //A1
		System.out.println('A'+'B'); //131 char는 연산시 ''는 무조건 정수형으로 처리
		System.out.println("A"+"B"); //AB
		System.out.println((int)'A'); //65 => 형변환
		System.out.println((int)'a'); //97
		System.out.println((int)'0'); //48
		System.out.println((int)'+'); //43
		System.out.println('A'+'+'); //108
		System.out.println(0b1010); //10 = 2^3+2^1
		System.out.println(01010); //520 = 8^3+8^1
		System.out.println(0x1010); //4112 = 16^3+16^1
		
		//float f=10.5; 에러 => 10.5는 디폴트 double인데 데이터형이 float라서 에러
		float f=10.5F;
		double d=10.5;
	}

}
